"""add base tables.

Revision ID: 501db6a3e7b2
Revises: 9e8c7499d311
Create Date: 2025-08-28 22:39:36.858986

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = '501db6a3e7b2'
down_revision: Union[str, Sequence[str], None] = '9e8c7499d311'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('services',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=100), nullable=False),
                    sa.Column('description', sa.Text(), nullable=True),
                    sa.Column('category', sa.Enum('WASH_FOLD', 'DRY_CLEAN',
                                                  'PRESS_ONLY', 'STARCH', name='servicecategory'), nullable=False),
                    sa.Column('base_price', sa.Float(), nullable=False),
                    sa.Column('price_per_pound', sa.Float(), nullable=True),
                    sa.Column('price_per_item', sa.Float(), nullable=True),
                    sa.Column('is_active', sa.Boolean(), nullable=True),
                    sa.Column('requires_special_handling',
                              sa.Boolean(), nullable=True),
                    sa.Column('turnaround_hours',
                              sa.Integer(), nullable=False),
                    sa.Column('special_instructions',
                              sa.Text(), nullable=True),
                    sa.Column('min_order_amount', sa.Float(), nullable=True),
                    sa.Column('created_at', sa.DateTime(timezone=True),
                              server_default=sa.text('now()'), nullable=True),
                    sa.Column('updated_at', sa.DateTime(
                        timezone=True), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('name')
                    )
    op.create_index(op.f('ix_services_id'), 'services', ['id'], unique=False)
    op.create_table('users',
                    sa.Column('id', sa.UUID(), nullable=False),
                    sa.Column('email', sa.String(), nullable=False),
                    sa.Column('hashed_password', sa.String(), nullable=False),
                    sa.Column('first_name', sa.String(), nullable=True),
                    sa.Column('last_name', sa.String(), nullable=True),
                    sa.Column('phone', sa.String(), nullable=True),
                    sa.Column('is_active', sa.Boolean(), nullable=False),
                    sa.Column('is_admin', sa.Boolean(), nullable=False),
                    sa.Column('created_at', sa.DateTime(timezone=True),
                              server_default=sa.text('now()'), nullable=False),
                    sa.Column('updated_at', sa.DateTime(timezone=True),
                              server_default=sa.text('now()'), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('customers',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.UUID(), nullable=False),
                    sa.Column('preferred_pickup_time',
                              sa.String(length=50), nullable=True),
                    sa.Column('special_instructions',
                              sa.Text(), nullable=True),
                    sa.Column('loyalty_points', sa.Integer(), nullable=True),
                    sa.Column('is_vip', sa.Boolean(), nullable=True),
                    sa.Column('email_notifications',
                              sa.Boolean(), nullable=True),
                    sa.Column('sms_notifications',
                              sa.Boolean(), nullable=True),
                    sa.Column('created_at', sa.DateTime(timezone=True),
                              server_default=sa.text('now()'), nullable=True),
                    sa.Column('updated_at', sa.DateTime(
                        timezone=True), nullable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('user_id')
                    )
    op.create_index(op.f('ix_customers_id'), 'customers', ['id'], unique=False)
    op.create_table('addresses',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('customer_id', sa.Integer(), nullable=False),
                    sa.Column('address_line_1', sa.String(
                        length=255), nullable=False),
                    sa.Column('address_line_2', sa.String(
                        length=255), nullable=True),
                    sa.Column('city', sa.String(length=100), nullable=False),
                    sa.Column('state', sa.String(length=50), nullable=False),
                    sa.Column('zip_code', sa.String(
                        length=20), nullable=False),
                    sa.Column('country', sa.String(length=100), nullable=True),
                    sa.Column('address_type', sa.String(
                        length=50), nullable=False),
                    sa.Column('is_default', sa.Boolean(), nullable=True),
                    sa.Column('is_active', sa.Boolean(), nullable=True),
                    sa.Column('instructions', sa.Text(), nullable=True),
                    sa.Column('latitude', sa.String(length=20), nullable=True),
                    sa.Column('longitude', sa.String(
                        length=20), nullable=True),
                    sa.Column('created_at', sa.DateTime(timezone=True),
                              server_default=sa.text('now()'), nullable=True),
                    sa.Column('updated_at', sa.DateTime(
                        timezone=True), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['customer_id'], ['customers.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_addresses_id'), 'addresses', ['id'], unique=False)
    op.create_table('orders',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('order_number', sa.String(
                        length=50), nullable=False),
                    sa.Column('customer_id', sa.Integer(), nullable=False),
                    sa.Column('status', sa.Enum('PENDING', 'CONFIRMED', 'PICKED_UP', 'IN_PROGRESS', 'READY',
                                                'OUT_FOR_DELIVERY', 'DELIVERED', 'CANCELLED', name='orderstatus'), nullable=False),
                    sa.Column('total_amount', sa.Float(), nullable=False),
                    sa.Column('tax_amount', sa.Float(), nullable=True),
                    sa.Column('tip_amount', sa.Float(), nullable=True),
                    sa.Column('final_amount', sa.Float(), nullable=False),
                    sa.Column('pickup_address_id',
                              sa.Integer(), nullable=False),
                    sa.Column('pickup_date', sa.DateTime(
                        timezone=True), nullable=False),
                    sa.Column('pickup_time_slot', sa.String(
                        length=50), nullable=False),
                    sa.Column('pickup_instructions', sa.Text(), nullable=True),
                    sa.Column('delivery_address_id',
                              sa.Integer(), nullable=False),
                    sa.Column('delivery_date', sa.DateTime(
                        timezone=True), nullable=False),
                    sa.Column('delivery_time_slot', sa.String(
                        length=50), nullable=False),
                    sa.Column('delivery_instructions',
                              sa.Text(), nullable=True),
                    sa.Column('special_requests', sa.Text(), nullable=True),
                    sa.Column('is_rush_order', sa.Boolean(), nullable=True),
                    sa.Column('rush_fee', sa.Float(), nullable=True),
                    sa.Column('created_at', sa.DateTime(timezone=True),
                              server_default=sa.text('now()'), nullable=True),
                    sa.Column('updated_at', sa.DateTime(
                        timezone=True), nullable=True),
                    sa.Column('picked_up_at', sa.DateTime(
                        timezone=True), nullable=True),
                    sa.Column('completed_at', sa.DateTime(
                        timezone=True), nullable=True),
                    sa.Column('delivered_at', sa.DateTime(
                        timezone=True), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['customer_id'], ['customers.id'], ),
                    sa.ForeignKeyConstraint(
                        ['delivery_address_id'], ['addresses.id'], ),
                    sa.ForeignKeyConstraint(
                        ['pickup_address_id'], ['addresses.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_orders_id'), 'orders', ['id'], unique=False)
    op.create_index(op.f('ix_orders_order_number'),
                    'orders', ['order_number'], unique=True)
    op.create_table('notifications',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('customer_id', sa.Integer(), nullable=False),
                    sa.Column('order_id', sa.Integer(), nullable=True),
                    sa.Column('type', sa.Enum('ORDER_CONFIRMATION', 'PICKUP_REMINDER', 'ORDER_READY', 'OUT_FOR_DELIVERY',
                                              'DELIVERY_CONFIRMATION', 'ORDER_STATUS_UPDATE', 'PROMOTIONAL', name='notificationtype'), nullable=False),
                    sa.Column('title', sa.String(length=255), nullable=False),
                    sa.Column('message', sa.Text(), nullable=False),
                    sa.Column('status', sa.Enum('PENDING', 'SENT', 'DELIVERED',
                                                'FAILED', 'READ', name='notificationstatus'), nullable=False),
                    sa.Column('delivery_method', sa.String(
                        length=50), nullable=False),
                    sa.Column('sent_at', sa.DateTime(
                        timezone=True), nullable=True),
                    sa.Column('delivered_at', sa.DateTime(
                        timezone=True), nullable=True),
                    sa.Column('read_at', sa.DateTime(
                        timezone=True), nullable=True),
                    sa.Column('external_id', sa.String(
                        length=255), nullable=True),
                    sa.Column('retry_count', sa.Integer(), nullable=True),
                    sa.Column('error_message', sa.Text(), nullable=True),
                    sa.Column('created_at', sa.DateTime(timezone=True),
                              server_default=sa.text('now()'), nullable=True),
                    sa.Column('updated_at', sa.DateTime(
                        timezone=True), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['customer_id'], ['customers.id'], ),
                    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_notifications_id'),
                    'notifications', ['id'], unique=False)
    op.create_table('order_items',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('order_id', sa.Integer(), nullable=False),
                    sa.Column('service_id', sa.Integer(), nullable=False),
                    sa.Column('item_name', sa.String(
                        length=255), nullable=False),
                    sa.Column('item_type', sa.String(
                        length=100), nullable=False),
                    sa.Column('quantity', sa.Integer(), nullable=False),
                    sa.Column('unit_price', sa.Float(), nullable=False),
                    sa.Column('total_price', sa.Float(), nullable=False),
                    sa.Column('weight', sa.Float(), nullable=True),
                    sa.Column('special_instructions',
                              sa.Text(), nullable=True),
                    sa.Column('fabric_type', sa.String(
                        length=100), nullable=True),
                    sa.Column('color', sa.String(length=50), nullable=True),
                    sa.Column('is_completed', sa.Boolean(), nullable=True),
                    sa.Column('completed_at', sa.DateTime(
                        timezone=True), nullable=True),
                    sa.Column('created_at', sa.DateTime(timezone=True),
                              server_default=sa.text('now()'), nullable=True),
                    sa.Column('updated_at', sa.DateTime(
                        timezone=True), nullable=True),
                    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
                    sa.ForeignKeyConstraint(['service_id'], ['services.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_order_items_id'),
                    'order_items', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_order_items_id'), table_name='order_items')
    op.drop_table('order_items')
    op.drop_index(op.f('ix_notifications_id'), table_name='notifications')
    op.drop_table('notifications')
    op.drop_index(op.f('ix_orders_order_number'), table_name='orders')
    op.drop_index(op.f('ix_orders_id'), table_name='orders')
    op.drop_table('orders')
    op.drop_index(op.f('ix_addresses_id'), table_name='addresses')
    op.drop_table('addresses')
    op.drop_index(op.f('ix_customers_id'), table_name='customers')
    op.drop_table('customers')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_services_id'), table_name='services')
    op.drop_table('services')
    # ### end Alembic commands ###
