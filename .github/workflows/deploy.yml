name: Deploy to Railway

on:
  push:
    branches: [ main ]
  workflow_run:
    workflows: ["CI Pipeline"]
    types: [completed]
    branches: [ main ]

env:
  NODE_VERSION: '18'
  PYTHON_VERSION: '3.11'

jobs:
  # Only deploy if CI pipeline passes
  deploy:
    name: Deploy to Railway
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'push' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Set up pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8

    - name: Install Railway CLI
      run: npm install -g @railway/cli

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Build applications
      run: |
        # Build web app
        pnpm run build --filter=web
        
        # Build API (if needed)
        cd apps/api
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Deploy to Railway
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
      run: |
        # Login to Railway
        railway login --token $RAILWAY_TOKEN
        
        # Link project (if not already linked)
        railway link || true
        
        # Deploy all services
        railway up --detach
        
        # Get deployment URLs
        echo "üöÄ Deployment completed!"
        echo "Check your Railway dashboard for deployment status:"
        railway status

    - name: Notify deployment status
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "‚úÖ Deployment successful!"
        else
          echo "‚ùå Deployment failed!"
        fi

  # Deploy to staging environment
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/develop' && github.event.workflow_run.conclusion == 'success' }}
    environment: staging
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Set up pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8

    - name: Install Railway CLI
      run: npm install -g @railway/cli

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Build applications
      run: |
        # Build web app for staging
        pnpm run build --filter=web
        
        # Build API for staging
        cd apps/api
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Deploy to Railway Staging
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_STAGING_TOKEN }}
      run: |
        # Login to Railway
        railway login --token $RAILWAY_TOKEN
        
        # Link staging project
        railway link --project ${{ secrets.RAILWAY_STAGING_PROJECT_ID }} || true
        
        # Deploy to staging
        railway up --detach
        
        echo "üöÄ Staging deployment completed!"
        railway status